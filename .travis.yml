language: php
phps:
 - 5.2
 - 5.3
 - 5.4

branches:
  only:
    - master
    - ACVSiteInstall

#matrix:
#  include:
#    - php: 5.3
#      env: VARIA=true
#      before_script:
#       # - node -v
#       # - pear install pear/PHP_CodeSniffer
#       - pear channel-discover pear.phing.info
#       - pear install [--alldeps] phing/phing
#       - pear install HTTP_Request2 # Used by phing
#       # - mkdir ../elgg-coding-standards
#       # - git clone https://github.com/Elgg/elgg-coding-standards.git ../elgg-coding-standards/
#       - phpenv rehash
#       - phing clean build # not sure if it's needed here
#       # - npm install -g karma@0.8
#       # - sudo easy_install "Sphinx==1.1.3"
#      script:
#       # - phpcs --standard=../elgg-coding-standards/elgg.xml --warning-severity=0 --ignore=*/tests/*,*/upgrades/*,*/deprecated* engine/classes engine/lib
#       # - karma start js/tests/karma.conf.js --single-run
#       # - sphinx-build -b html -nW docs docs/_build/html
#         # Flags used here, not in `make html`:
#         # -n Run in nit-picky mode. Currently, this generates warnings for all missing references.
#         # -W Turn warnings into errors. This means that the build stops at the first warning and sphinx-build exits with exit status 1.
#
services:
 - mysql

before_script:
 - pear channel-discover pear.phing.info
 - pear install [--alldeps] phing/phing
 - pear install HTTP_Request2 # Used by phing
 - phpenv rehash
 - phing clean build
 - mysql -e 'create database elgg;'
 - echo "USE mysql; UPDATE user SET password=PASSWORD('password') WHERE user='root'; FLUSH PRIVILEGES;" | mysql -u root
 - mkdir "${HOME}/elgg_data/"
 - php -f ./target/procura/install/cli/travis_installer.php

## TODO: replace with procur@ specific tests
script:
# - phpunit
 - php -f ./target/procura/engine/tests/suite.php
 
notifications:
  email:
    - jliarte@asi-soft.com

